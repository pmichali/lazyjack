package orca_test

import (
	"testing"

	"github.com/pmichali/orca"
)

func TestKubeAdmConfigContents(t *testing.T) {
	c := &orca.Config{
		Token: "56cdce.7b18ad347f3de81c",
		Service: orca.ServiceNetwork{
			CIDR: "fd00:30::/110",
		},
		Mgmt: orca.ManagementNetwork{
			Subnet: "fd00:100::",
		},
	}
	n := &orca.Node{
		Name: "my-master",
		ID:   10,
	}

	expected := `# Autogenerated file
apiVersion: kubeadm.k8s.io/v1alpha1
kind: MasterConfiguration
kubernetesVersion: 1.9.0
api:
  advertiseAddress: "fd00:100::10"
networking:
  serviceSubnet: "fd00:30::/110"
nodeName: my-master
token: "56cdce.7b18ad347f3de81c"
tokenTTL: 0s
apiServerExtraArgs:
  insecure-bind-address: "::"
  insecure-port: "8080"
  runtime-config: "admissionregistration.k8s.io/v1alpha1"
  feature-gates: AllAlpha=true
`
	actual := orca.CreateKubeAdmConfigContents(n, c)
	if actual.String() != expected {
		t.Errorf("FAILED: kubeadm.conf contents wrong\nExpected: %s\n  Actual: %s\n", expected, actual.String())
	}
}
